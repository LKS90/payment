<?php

/**
 * @file
 * Tests for payment.module.
 */

/**
 * Tests action hook invocations.
 */
class PaymentActionHookTest extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => 'Action hook invocations',
      'group' => 'Payment',
    );
  }

  function setUp() {
    parent::setUp('payment_test', 'paymentmethodbasic');
  }

  /**
   * Test whether hook_payment_validate() is invoked.
   */
  function testHookPaymentValidate() {
    $payment_method = new PaymentMethod(array(
      'controller' => payment_method_controller_load('PaymentMethodBasicController'),
    ));
    $payment = new Payment(array(
      'method' => $payment_method,
      'amount' => 1,
      'finish_callback' => 'payment_test_finish_callback',
    ));
    $payment->execute();
    $this->assertTrue(isset($payment->payment_test_payment_validate), t('hook_payment_validate() is invoked when validating a payment before execution.'));
    $this->assertTrue(isset($payment->payment_test_payment_pre_execute), t('hook_payment_pre_execute() is invoked before executing a payment.'));
    $this->assertTrue(isset($payment->payment_test_payment_status_change), t('hook_payment_status_change() is invoked before executing a payment.'));
  }
}