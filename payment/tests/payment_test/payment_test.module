<?php

/**
 * @file
 * Hook implementations and shared functions.
 */

/**
 * Implements hook_payment_line_item_info().
 */
function payment_test_payment_line_item_info() {
  return array(
    new PaymentLineItemInfo(array(
      'callback' => 'payment_test_line_item_get',
      'name' => 'payment_test',
      'title' => t('Payment Form amount'),
    )),
  );
}

/**
 * Implements hook_payment_validate().
 */
function payment_test_payment_validate(Payment $payment, PaymentMethod $payment_method, $strict) {
  if (isset($payment->payment_test_payment_validate)) {
    throw new PaymentValidationException('payment_test');
  }
}

/**
 * Implements hook_payment_status_change().
 */
function payment_test_payment_status_change(Payment $payment, $old_status) {
  $payment->payment_test_payment_status_change = TRUE;
}

/**
 * Implements hook_payment_pre_execute().
 */
function payment_test_payment_pre_execute(Payment $payment) {
  $payment->payment_test_payment_pre_execute = TRUE;
}

/**
 * Implements Payment finish callback.
 */
function payment_test_finish_callback(Payment $payment) {
  $payment->payment_test_finish_callback = TRUE;
}

/**
 * Implements PaymentLineItemInfo::callback.
 */
function payment_test_line_item_get($name, Payment $payment) {
  return(array($payment->line_items['foo'], $payment->line_items['bar']));
}