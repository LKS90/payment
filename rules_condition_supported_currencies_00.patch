diff --git a/payment/payment.rules.inc b/payment/payment.rules.inc
index 25844e1..da83cd1 100644
--- a/payment/payment.rules.inc
+++ b/payment/payment.rules.inc
@@ -122,6 +122,21 @@ function payment_rules_condition_info() {
     ),
     'group' => t('Payment'),
   );
+  $conditions['payment_rules_condition_payment_method_controller_supports_currency'] = array(
+    'label' => t('Payment method type supports currency'),
+    'parameter' => array(
+      'payment' => array(
+        'label' => t('Payment'),
+        'type' => 'payment',
+        'restriction' => 'selector',
+      ),
+      'currency' => array(
+        'type' => 'text',
+        'label' => t('Currency code'),
+      ),
+    ),
+    'group' => t('Payment'),
+  );
 
   return $conditions;
 }
@@ -274,4 +289,19 @@ function payment_rules_options_list_payment_uses_payment_method_type() {
  */
 function payment_rules_condition_payment_uses_payment_method_type(Payment $payment, array $payment_method_controller_class_names) {
   return in_array($payment->method->controller->name, $payment_method_controller_class_names);
+}
+
+/**
+ * Implements Rules condition callback: check whether a payment method
+ * controller supports a currency.
+ *
+ * @param $payment Payment
+ *   The payment to check the condition for.
+ * @param $currency string
+ *   The ISO 4217 currency code to check for.
+ *
+ * @return boolean
+ */
+function payment_rules_condition_payment_method_controller_supports_currency(Payment $payment, $currency) {
+  return empty($payment->method->controller->currencies) ? TRUE : in_array($currency, $payment->method->controller->currencies);
 }
\ No newline at end of file
